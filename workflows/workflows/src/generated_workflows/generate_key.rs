use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Generate RSA key"####.into(),command: r####"ssh-keygen -t {{key_type}} -b {{key_size}} -o -a 100 -C "{{key_comment}}" -f "{{key_file_name}}""####.into(),tags: vec![r####"ssl"####.into(),r####"openssl"####.into()].into_iter().collect(),description: Some(r####"Generate new RSA key with 100 KDF rounds."####.into()),arguments: vec![Argument {name: r####"key_type"####.into(),description: Some(r####"Type of the new key. Options are: rsa, dsa, ed25519, ed25519-sk, ecdsa, ecdsa-sk"####.into()),default_value: Some(r####"rsa"####.into()),},Argument {name: r####"key_size"####.into(),description: Some(r####"Size of new key in bits. DSA example: 1024. RSA example: 2048, 3072, 4096. ECDSA examples: 256, 384, 512. EXDSA-SK, ED25519 and ED25519-SK have fixed length (flag will be ignored)."####.into()),default_value: Some(r####"2048"####.into()),},Argument {name: r####"key_comment"####.into(),description: Some(r####"Comment displayed at the end of the key. Optional."####.into()),default_value: Some(r####""####.into()),},Argument {name: r####"key_file_name"####.into(),description: Some(r####"Filename of the new key."####.into()),default_value: Some(r####""####.into()),}].into_iter().collect(),source_url: None,author: Some(r####"Petr Stepan (Deworn)"####.into()),author_url: Some(r####"https://github.com/deworn"####.into()),shells: vec![].into_iter().collect(),}
}
