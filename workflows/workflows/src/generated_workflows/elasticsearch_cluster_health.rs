use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Show the Elasticsearch cluster health"####.into(),command: r####"curl -XGET '{{schema}}://{{host}}:{{port}}/_cat/health?v={{verbose}}'"####.into(),tags: vec![r####"elasticsearch"####.into(),r####"curl"####.into()].into_iter().collect(),description: Some(r####"Inspect the Elasticsearch cluster health"####.into()),arguments: vec![Argument {name: r####"schema"####.into(),description: Some(r####"The url schema"####.into()),default_value: Some(r####"http"####.into()),},Argument {name: r####"host"####.into(),description: Some(r####"The url hostname"####.into()),default_value: Some(r####"localhost"####.into()),},Argument {name: r####"port"####.into(),description: Some(r####"The url port"####.into()),default_value: Some(r####"9200"####.into()),},Argument {name: r####"verbose"####.into(),description: Some(r####"Should the output be verbose"####.into()),default_value: Some(r####"true"####.into()),}].into_iter().collect(),source_url: Some(r####"https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-health.html"####.into()),author: Some(r####"Olaf Klejnstrup-Jensen"####.into()),author_url: Some(r####"https://github.com/fului"####.into()),shells: vec![].into_iter().collect(),}
}
