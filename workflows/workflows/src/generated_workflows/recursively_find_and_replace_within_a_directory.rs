use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Recursively find and replace within a directory"####.into(),command: r####"grep -rl {{old_text}} {{file_path}} | xargs sed -i '' 's/{{old_text}}/{{new_text}}/g'"####.into(),tags: vec![r####"file manipulation"####.into(),r####"sed"####.into(),r####"grep"####.into()].into_iter().collect(),description: Some(r####"Replaces all occurrences of a string recursively within a directory"####.into()),arguments: vec![Argument {name: r####"old_text"####.into(),description: Some(r####"The text that should be replaced"####.into()),default_value: None,},Argument {name: r####"file_path"####.into(),description: Some(r####"The file path where the recursive find/replace should occur"####.into()),default_value: None,},Argument {name: r####"new_text"####.into(),description: Some(r####"The text that the found text should be replaced with"####.into()),default_value: None,}].into_iter().collect(),source_url: Some(r####"https://stackoverflow.com/questions/1583219/how-can-i-do-a-recursive-find-replace-of-a-string-with-awk-or-sed"####.into()),author: Some(r####"Anatoly"####.into()),author_url: Some(r####"https://stackoverflow.com/users/930371/anatoly"####.into()),shells: vec![].into_iter().collect(),}
}
