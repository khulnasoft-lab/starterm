use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Reset local branch to match remote branch"####.into(),command: r####"git fetch {{remote}}
git reset --hard {{remote}}/{{branch}}"####.into(),tags: vec![r####"git"####.into()].into_iter().collect(),description: Some(r####"Resets a local branch to match a remote branch by pulling the most recent changes from the remote branch and then force resetting the local branch to match the remote branch."####.into()),arguments: vec![Argument {name: r####"remote"####.into(),description: Some(r####"The name of the remote"####.into()),default_value: Some(r####"origin"####.into()),},Argument {name: r####"branch"####.into(),description: Some(r####"The name of the remote branch that the local branch should be reset to"####.into()),default_value: Some(r####"master"####.into()),}].into_iter().collect(),source_url: Some(r####"https://stackoverflow.com/questions/1628088/reset-local-repository-branch-to-be-just-like-remote-repository-head"####.into()),author: Some(r####"Dan Moulding"####.into()),author_url: Some(r####"https://stackoverflow.com/users/95706/dan-moulding"####.into()),shells: vec![].into_iter().collect(),}
}
