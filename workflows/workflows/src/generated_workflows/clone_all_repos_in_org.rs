use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Clone all repos in a GitHub Organization"####.into(),command: r####"curl -s -H "Authorization: token {{auth_token}}" "https://api.github.com/orgs/{{org}}/repos?page={{page}}&per_page=100" | jq -r ".[].clone_url" | xargs -L1 git clone  "####.into(),tags: vec![r####"git"####.into(),r####"github"####.into()].into_iter().collect(),description: Some(r####"Uses the GitHub API to retrieve a list of repos (up to 100 per page) and clones them."####.into()),arguments: vec![Argument {name: r####"auth_token"####.into(),description: Some(r####"A personal Authorization Token created on GitHub (may need to enable SAML after token is created) https://github.com/settings/tokens"####.into()),default_value: None,},Argument {name: r####"org"####.into(),description: Some(r####"The organization name (ex. facebook)"####.into()),default_value: Some(r####"facebook"####.into()),},Argument {name: r####"page"####.into(),description: Some(r####"Page number"####.into()),default_value: Some(r####"1"####.into()),}].into_iter().collect(),source_url: Some(r####"https://medium.com/rigor-guild/clone-all-github-repositories-in-an-organization-36ab87b94d7c"####.into()),author: Some(r####"Carlos Buenosvinos"####.into()),author_url: Some(r####"https://medium.com/@carlosbuenosvinos"####.into()),shells: vec![].into_iter().collect(),}
}
