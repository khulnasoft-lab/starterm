use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Compression all subdirectories and output each directory as a zip file."####.into(),command: r####"for dir in $(ls -d {{directory}}*/); do (zip -r {{options}} {{output}}$(basename $dir){{name_with_str}}.zip ${dir}{{zip_pattern}} && echo -e "Compressed to {{output}}$(basename $dir){{name_with_str}}.zip."); done"####.into(),tags: vec![r####"zip"####.into()].into_iter().collect(),description: Some(r####"Use zip to compress all subdirectories under a folder and output each directory as a zip file."####.into()),arguments: vec![Argument {name: r####"directory"####.into(),description: Some(r####"Optional, The directory to execute. default is current directory."####.into()),default_value: Some(r####"./"####.into()),},Argument {name: r####"options"####.into(),description: Some(r####"Optional, The options of zip command."####.into()),default_value: Some(r####"-q"####.into()),},Argument {name: r####"zip_pattern"####.into(),description: Some(r####"Optional, The pattern of match the files under each subdirectory to be compressed."####.into()),default_value: Some(r####"*"####.into()),},Argument {name: r####"output"####.into(),description: Some(r####"Optional, The output directory of the zip files. default is the current directory."####.into()),default_value: Some(r####"./"####.into()),},Argument {name: r####"name_with_str"####.into(),description: Some(r####"Optional, Endwith string of each zip file name. default is now time string."####.into()),default_value: Some(r####"_$(date +%Y%m%d%H%M%S)"####.into()),}].into_iter().collect(),source_url: Some(r####"https://www.geeksforgeeks.org/zip-command-in-linux-with-examples/"####.into()),author: Some(r####"funnyzak"####.into()),author_url: Some(r####"https://github.com/funnyzak"####.into()),shells: vec![Shell::Bash].into_iter().collect(),}
}
