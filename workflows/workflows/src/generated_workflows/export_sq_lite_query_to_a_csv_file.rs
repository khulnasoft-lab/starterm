use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Export SQLite query to a CSV file"####.into(),command: r####"sqlite3 -header -csv {{db_filepath}}  {{sql_query}} > {{output_filepath}}"####.into(),tags: vec![r####"sqlite"####.into()].into_iter().collect(),description: Some(r####"Executes a sql query against the given SQLite database and outputs the the results to a CSV file."####.into()),arguments: vec![Argument {name: r####"db_filepath"####.into(),description: Some(r####"The filepath to the sqlite database"####.into()),default_value: None,},Argument {name: r####"sql_query"####.into(),description: Some(r####"The sql query that's run on the database."####.into()),default_value: None,},Argument {name: r####"output_filepath"####.into(),description: Some(r####"The CSV output filepath"####.into()),default_value: None,}].into_iter().collect(),source_url: Some(r####"https://stackoverflow.com/questions/5776660/export-from-sqlite-to-csv-using-shell-script"####.into()),author: Some(r####"rorro"####.into()),author_url: Some(r####"https://stackoverflow.com/users/704178/rorro"####.into()),shells: vec![].into_iter().collect(),}
}
