use starterm_workflows_types::*;
pub fn workflow() -> Workflow {
    Workflow {name: r####"Send a Firebase push notification to a local Android emulator"####.into(),command: r####"adb shell am broadcast \ -n {{your_app_package_name}}/com.google.firebase.iid.FirebaseInstanceIdReceiver \ -a "com.google.android.c2dm.intent.RECEIVE" \ --es "title" "{{notification_title}}" \ --es "body" "{{notification_body}}" \ --es "deeplink" "{{deeplink}}""####.into(),tags: vec![r####"android"####.into(),r####"adb"####.into(),r####"firebase"####.into()].into_iter().collect(),description: Some(r####"Uses adb to push a Firebase push notification to your local emulator"####.into()),arguments: vec![Argument {name: r####"your_app_package_name"####.into(),description: Some(r####"The package name of the app that you want to receive the notification. It has to have implemented the receiver for it to work."####.into()),default_value: Some(r####"com.my.app.package"####.into()),},Argument {name: r####"notification_title"####.into(),description: Some(r####"The title of the notification"####.into()),default_value: Some(r####"title"####.into()),},Argument {name: r####"notification_body"####.into(),description: Some(r####"The body of the notification"####.into()),default_value: Some(r####"body"####.into()),},Argument {name: r####"deep_link"####.into(),description: Some(r####"A deeplink for the notification (eg. `app://open.my.app`)"####.into()),default_value: None,}].into_iter().collect(),source_url: None,author: Some(r####"Odin Asbj√∏rnsen"####.into()),author_url: Some(r####"https://github.com/oas004"####.into()),shells: vec![].into_iter().collect(),}
}
